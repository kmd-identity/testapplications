{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Saml2": {
    "IdPMetadata": "https://testidp-dev.identity.kmd.dk/saml/metadata?postLoginUrl=post|https://localhost:44350/Auth/AssertionConsumerService&postLogoutUrl=post|https://localhost:44350/Auth/LoggedOut&interactive=true",
    "Issuer": "https://saml.schemas.identity.kmd.dk/realm/kmd.identity.testapplications.saml.mvccore.local",
    "SignatureAlgorithm": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256",
    "SigningCertificateFile": "itfoxtec.identity.saml2.testwebappcore_Certificate.pfx",
    "SigningCertificateThumbprint": "",
    "SigningCertificatePassword": "!QAZ2wsx",
    //Suggested approach:
    //1. When you connect to IdP that uses OCES3 signing certificate (i.e. KMD Identity) and:
    //  a) You can add OCES3 root certificate to the Trusted Root Certification Authorities Store (i.e. you run your code in VM)
    //     then use ChainTrust
    //  b) You cannot trust OCES3 root certificate (i.e. App Service deployment)
    //     then use Custom
    //2. When you connect to IdP that uses self-signed certificate 
    //     then use Custom
    //3. When you connect to IdP that uses proper signing certificate with trusted chain
    //     then use ChainTrust
    //4. If you have special requirements
    //     then use Custom and look at CustomSamlCertificateValidator to adapt it to your needs or create a new one
    //You can always select one of possible options: 
    //1. None - signing certificate is not validated
    //2. PeerTrust - signing certificate is in the Trusted People store
    //3. ChainTrust - signing certificate chain is trusted
    //4. PeerOrChainTrust - signing certificate is in the Trusted People store or signing certificate chain is trusted
    //5. Custom - special implementation that you must provide
    "CertificateValidationMode": "Custom",
    //Possible options: NoCheck, Online, Offline
    //Suggested option: Online
    "RevocationMode": "Online",
    "SignAuthnRequest": true
  },
  "AllowedHosts": "*",
  "ApplicationInsights": {
    "ConnectionString": ""
  }
}

